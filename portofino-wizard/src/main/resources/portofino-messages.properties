#Wizard
wizard.next = Next >>
wizard.prev = << Previous
wizard.finish = Finish

appwizard.showAdvancedOptions = Show advanced options
appwizard.jdbcDriver.help = Additional drivers can be downloaded and added to the shared libraries of your application server.
appwizard.error.duplicateDatabase = There is already a database named {0}
appwizard.error.schemas = Couldn''t read schema names from db: {0}
appwizard.error.schemas.noneSelected = Select at least a schema
appwizard.error.sync = Error in database synchronization: {0}
appwizard.error.updateModelFailed = Could not save model: {0}
appwizard.error.createPagesFailed = Could not create pages: {0}
appwizard.error.createDirectoryFailed = Couldn''t create directory {0}
appwizard.error.directoryExists = Directory exists, page not created ({0})
appwizard.error.userSetupFailed = Couldn''t set up user management: {0}
appwizard.warning.noRoot = No page will be generated
appwizard.warning.schemaExists = Schema {0} was already configured: existing pages won''t be updated

appwizard.existingConnectionProvider = Use an existing database connection
appwizard.orNewConnectionProvider = or create a new one (choose its type):
appwizard.newConnectionProvider = Create a new connection (choose type):
appwizard.schemas.found = Found schemas:
appwizard.schemas.confirmFinish = The connection provider will be configured, but no page will be auto-generated for it.
appwizard.roots.select = Select root tables

appwizard.userAndGroupTables = Users and groups tables

appwizard.userManagement.warning = Warning: configuring user management will overwrite the existing security.groovy

appwizard.userTable = Users table setup
appwizard.userTable.name = Users table
appwizard.userTable.encryption = password encryption algorithm
appwizard.userTable.encryption.plaintext = Plain text
appwizard.userTable.encryption.md5Base64 = MD5 (Base64 encoded)
appwizard.userTable.encryption.md5Hex = MD5 (Hex encoded)
appwizard.userTable.encryption.sha1Base64 = SHA-1 (Base64 encoded) - Portofino 3
appwizard.userTable.encryption.sha1Hex = SHA-1 (Hex encoded)
appwizard.userTable.idProperty = user id property
appwizard.userTable.nameProperty = username property
appwizard.userTable.passwordProperty = password property
appwizard.userTable.emailProperty = email property
appwizard.userTable.tokenProperty = token property

appwizard.groupTable = Groups tables setup
appwizard.groupTable.name = groups table
appwizard.groupTable.idProperty = group id property
appwizard.groupTable.nameProperty = group name property
appwizard.groupTable.adminGroupName = name of the administrators group

appwizard.userGroupTable.name = user-group join table
appwizard.userGroupTable.userLinkProperty = property that links to user
appwizard.userGroupTable.groupLinkProperty = property that links to group

appwizard.createPages.selectStrategy = Select the generation strategy:
appwizard.createPages.strategy.no = Don't generate anything
appwizard.createPages.strategy.auto = Automatic
appwizard.createPages.strategy.manual = Manual (choose which pages will be created)
appwizard.generateCalendar = Generate a calendar page

appwizard.finish.text = Press Finish to build the application. \
  This operation might require several minutes to complete.
appwizard.finished = Application created. Now browse it and customize it!
appwizard.warning.userTable.created = User management has been configured. Please edit the generated security.groovy \
  file to suit your environment and to remove the admin user hardcoded for the wizard. \
  You have been automatically logged out of the system; please log in again.

wizard.step = Step {0}
appwizard.step1.title = Connect to your database
appwizard.step2.title = Select the database schema(s) to import
appwizard.step3.title = Set up user management
appwizard.step3a.title = Customize user management
appwizard.step4.title = Generate pages
appwizard.step5.title = Build the application!